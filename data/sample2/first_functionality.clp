(defglobal ?*propozitiiNeparsate* = 0)
(defglobal ?*propozitiiParsate* = 0)
(defglobal ?*totalPropozitii* = 0)
(defglobal ?*propozitiaCurenta* = "")
(defglobal ?*nrFacts* = 0)

(deffacts facts
		(waiting_input)
		(answer)
		(rule G1 S NNP A1)
		(rule G2 A1 VBZ B1)
		(rule G3 B1 IN C1)
		(rule G4 C1 NNP D1)
		(rule G5 D1 VBZ E1)
		(rule G6 E1 DT F1)
		(rule G7 F1 NN G1)
		(rule G8 G1 IN H1)
		(rule G9 H1 DT I1)
		(rule G10 I1 NN J1)
		(rule G11 J1 , K1)
		(rule G12 K1 CC L1)
		(rule G13 L1 IN M1)
		(rule G14 M1 PRP N1)
		(rule G15 N1 VBZ O1)
		(rule G16 O1 RB P1)
		(rule G17 P1 JJ Q1)
		(rule G18 Q1 RB R1)
		(rule G19 R1 . S)
		(rule G20 S PRP A2)
		(rule G21 A2 VBZ B2)
		(rule G22 B2 IN C2)
		(rule G23 C2 JJ D2)
		(rule G24 D2 NNP E2)
		(rule G25 E2 NN F2)
		(rule G26 F2 MD G2)
		(rule G27 G2 VB H2)
		(rule G28 H2 RB I2)
		(rule G29 I2 , J2)
		(rule G30 J2 RB K2)
		(rule G31 K2 JJ L2)
		(rule G32 L2 . S)
		(rule G33 S _SP A3)
		(rule G34 A3 NNP B3)
		(rule G35 B3 RB C3)
		(rule G36 C3 VBZ D3)
		(rule G37 D3 TO E3)
		(rule G38 E3 VB F3)
		(rule G39 F3 JJR G3)
		(rule G40 G3 . S)
		(rule G41 S NNP A4)
		(rule G42 A4 VBZ B4)
		(rule G43 B4 VBG C4)
		(rule G44 C4 JJ D4)
		(rule G45 D4 . S)
		(rule G46 S IN A5)
		(rule G47 A5 DT B5)
		(rule G48 B5 JJ C5)
		(rule G49 C5 NN D5)
		(rule G50 D5 RB E5)
		(rule G51 E5 , F5)
		(rule G52 F5 PRP G5)
		(rule G53 G5 VBZ H5)
		(rule G54 H5 RB I5)
		(rule G55 I5 WP J5)
		(rule G56 J5 PRP K5)
		(rule G57 K5 VBZ L5)
		(rule G58 L5 . S)
		(rule G59 S IN A6)
		(rule G60 A6 DT B6)
		(rule G61 B6 JJ C6)
		(rule G62 C6 NNS D6)
		(rule G63 D6 NNS E6)
		(rule G64 E6 NN F6)
		(rule G65 F6 , G6)
		(rule G66 G6 PRP H6)
		(rule G67 H6 MD I6)
		(rule G68 I6 VB J6)
		(rule G69 J6 DT K6)
		(rule G70 K6 NN L6)
		(rule G71 L6 . S)
		(rule G72 S _SP A7)
		(rule G73 A7 PRP B7)
		(rule G74 B7 VBP C7)
		(rule G75 C7 VBZ D7)
		(rule G76 D7 NN E7)
		(rule G77 E7 JJ F7)
		(rule G78 F7 RB G7)
		(rule G79 G7 , H7)
		(rule G80 H7 CC I7)
		(rule G81 I7 PRP J7)
		(rule G82 J7 VBZ K7)
		(rule G83 K7 PRP L7)
		(rule G84 L7 VBZ M7)
		(rule G85 M7 VBN N7)
		(rule G86 N7 DT O7)
		(rule G87 O7 JJ P7)
		(rule G88 P7 NN Q7)
		(rule G89 Q7 WDT R7)
		(rule G90 R7 MD S7)
		(rule G91 S7 VB T7)
		(rule G92 T7 DT U7)
		(rule G93 U7 NN V7)
		(rule G94 V7 IN W7)
		(rule G95 W7 DT X7)
		(rule G96 X7 JJ Y7)
		(rule G97 Y7 NN Z7)
		(rule G98 Z7 . EPS)
)
(defrule read_input
        ?a <- (waiting_input)
        =>
        (close fisierPropozitiiNeparsate)
        (open "C:/Users/hanga/Desktop/input.dat" data "r")
        (assert (text S (explode$ (readline data))))
        (close data)
        (open "C:/Users/hanga/Desktop/first_output.dat" fisierPropozitiiNeparsate "w")
        (retract ?a)
)

(defrule apply_rule
        (rule ?g ?nonterminal ?first ?next)
        ?a <- (text ?nonterminal ?first $?rest)
        ?b <- (answer $?steps)
        =>
        (if (eq ?next S)
        then
                (bind ?*propozitiiParsate* (+ ?*propozitiiParsate* 1))
                (bind ?*propozitiaCurenta* (str-cat ?*propozitiaCurenta* ?first))
                (bind ?*propozitiaCurenta* "")

        )

        (if (eq (length $?rest) 0)
                then
                (bind ?*totalPropozitii* (+ ?*propozitiiNeparsate* ?*propozitiiParsate*))

        (close fisierPropozitiiNeparsate)
        )
        (bind ?*propozitiaCurenta* (str-cat ?*propozitiaCurenta* ?first " "))
        (assert (text ?next $?rest))
        (assert (answer $?steps ?g))
        (retract ?a)
        (retract ?b)
)

(defrule success
        ?a <- (text EPS)
        (answer $?steps)
        =>
        (retract ?a)
)

(defrule failure
        ?a <- (text ?simb $?cevaPropozitieNeparsata . $?restulPropozitiilor)
        =>

        (assert (newfacts ?simb ?cevaPropozitieNeparsata))

        (assert (text S $?restulPropozitiilor))

        (retract ?a)
)

(defrule newFacts
        ?a <- (newfacts ?simbolInceput ?simbolNeparsat $?cevaPropozitieNeparsata)
        =>

        (if (eq (length $?cevaPropozitieNeparsata) 0)
        then
        (bind ?*nrFacts* (length$ (get-fact-list)))
        (assert (rule ?*nrFacts* ?simbolInceput ?simbolNeparsat E1 ))
        (printout fisierPropozitiiNeparsate "Noua regula adaugata: (rule "?*nrFacts* " " ?simbolInceput " " ?simbolNeparsat " E1)" crlf )
        else
        (bind ?*nrFacts* (length$ (get-fact-list)))
        (assert (rule ?*nrFacts* ?simbolInceput ?simbolNeparsat (+ ?*nrFacts* 1)))
        (printout fisierPropozitiiNeparsate "Noua regula adaugata: (rule "?*nrFacts* " " ?simbolInceput " " ?simbolNeparsat " " (+ ?*nrFacts* 1)")" crlf )
        (assert (newfacts (+ ?*nrFacts* 1) ?cevaPropozitieNeparsata)))


        (retract ?a)
)